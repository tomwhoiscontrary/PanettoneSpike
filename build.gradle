buildscript {
	ext {
		springBootVersion = '1.2.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath (group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: springBootVersion)
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'

version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
	jamon
}
configurations.compile.extendsFrom configurations.jamon

repositories {
	mavenCentral()
}

dependencies {
	jamon (group: 'org.jamon', name: 'jamon', version: '2.2.2')

	compile (group: 'org.springframework.boot', name: 'spring-boot-starter-web')

	providedRuntime (group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat')

	testCompile (group: 'org.springframework.boot', name: 'spring-boot-starter-test')
}

class JamonCompileTask extends JavaExec {
	@InputDirectory File source
	@OutputDirectory File output
	@Input String templatePackage
	Task configure(Closure closure) {
		super.configure(closure)
		classpath project.configurations.jamon
		main 'org.jamon.TemplateProcessor'
		args "--srcDir=${source.path}", "--destDir=${output.path}", '--directories', "/${templatePackage.replace('.', '/')}"
	}
}
task generateTemplates(type: JamonCompileTask) {
	source file('src/main/views')
	output file('build/view-classes')
	templatePackage 'io.pivotal.cake'
}

// for some reason, bootRun can't find a main if run after generateTemplates
run {
	main 'io.pivotal.cake.Application'
}

sourceSets {
	main {
		java {
			srcDir generateTemplates.output
		}
	}
}
compileJava.dependsOn generateTemplates

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
		defaultOutputDir = file('.eclipse')
	}
}

task cfPush(type: Exec) {
	executable 'cf'
	args 'push', '-p', configurations.archives.allArtifacts.files.singleFile
}
cfPush.dependsOn assemble
